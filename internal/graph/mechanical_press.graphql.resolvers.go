package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.54

import (
	"context"

	"github.com/Svarcf/sever_go/internal/graph/model"
	"github.com/Svarcf/sever_go/internal/models"
)

// CreateMechanicalPress is the resolver for the createMechanicalPress field.
func (r *mutationResolver) CreateMechanicalPress(ctx context.Context, createMechanicalPressInput *model.CreateMechanicalPressInput) (*models.MechanicalPressDTO, error) {
	mechanicalPress := models.NewMechanicalPress(
		createMechanicalPressInput.Code,
		createMechanicalPressInput.Name,
	)
	return r.MechanicalPressService.CreateMechanicalPress(mechanicalPress)
}

// UpdateMechanicalPress is the resolver for the updateMechanicalPress field.
func (r *mutationResolver) UpdateMechanicalPress(ctx context.Context, updateMechanicalPressInput *model.UpdateMechanicalPressInput) (*models.MechanicalPressDTO, error) {
	mechanicalPress := models.NewMechanicalPress(
		updateMechanicalPressInput.Code,
		updateMechanicalPressInput.Name,
	)
	mechanicalPress.Id = updateMechanicalPressInput.ID
	return r.MechanicalPressService.UpdateMechanicalPress(mechanicalPress)
}

// MechanicalPresses is the resolver for the mechanicalPresses field.
func (r *queryResolver) MechanicalPresses(ctx context.Context) ([]*models.MechanicalPressDTO, error) {
	return r.MechanicalPressService.GetMechanicalPresses()
}

// MechanicalPress is the resolver for the mechanicalPress field.
func (r *queryResolver) MechanicalPress(ctx context.Context, id uint) (*models.MechanicalPressDTO, error) {
	return r.MechanicalPressService.GetMechanicalPressById(id)
}
