package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.54

import (
	"context"
	"fmt"

	"github.com/Svarcf/sever_go/internal/graph/model"
	"github.com/Svarcf/sever_go/internal/models"
)

// CreateStandardPart is the resolver for the createStandardPart field.
func (r *mutationResolver) CreateStandardPart(ctx context.Context, createStandardPartInput *model.CreateStandardPartInput) (*models.StandardPart, error) {
	panic(fmt.Errorf("not implemented: CreateStandardPart - createStandardPart"))
}

// UpdateStandardPart is the resolver for the updateStandardPart field.
func (r *mutationResolver) UpdateStandardPart(ctx context.Context, updateStandardPartInput *model.UpdateStandardPartInput) (*models.StandardPart, error) {
	panic(fmt.Errorf("not implemented: UpdateStandardPart - updateStandardPart"))
}

// StandardParts is the resolver for the standardParts field.
func (r *queryResolver) StandardParts(ctx context.Context) ([]*models.StandardPart, error) {
	return r.StandardPartService.GetStandardParts()
}

// StandardPart is the resolver for the standardPart field.
func (r *queryResolver) StandardPart(ctx context.Context, id uint) (*models.StandardPart, error) {
	return r.StandardPartService.GetStandardPartById(id)
}
