package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.54

import (
	"context"
	"fmt"

	"github.com/Svarcf/sever_go/internal/common"
	"github.com/Svarcf/sever_go/internal/graph/model"
	"github.com/Svarcf/sever_go/internal/models"
)

// CreateRole is the resolver for the createRole field.
func (r *mutationResolver) CreateRole(ctx context.Context, createRoleInput *model.CreateRoleInput) (*models.Role, error) {
	panic(fmt.Errorf("not implemented: CreateRole - createRole"))
}

// Roles is the resolver for the roles field.
func (r *queryResolver) Roles(ctx context.Context) ([]*models.Role, error) {
	context := common.GetContext(ctx)
	var roles []*models.Role
	err := context.Database.Find(&roles).Error
	if err != nil {
		return nil, err
	}
	return roles, nil
}

// Role is the resolver for the role field.
func (r *queryResolver) Role(ctx context.Context, id uint) (*models.Role, error) {
	context := common.GetContext(ctx)
	var role *models.Role
	err := context.Database.Where("id = ?", id).First(&role).Error
	if err != nil {
		return nil, err
	}
	return role, nil
}
